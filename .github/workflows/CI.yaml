name: Continuous Integration 

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
  workflow_call:

jobs:
  test-neovim:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Install Rust Dependencies
        run: |
          cargo install ripgrep
          cargo install fd-find

      - name: Install yazi
        run: |
          sudo apt install yazi

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: vx.x.x

      - name: Install Typst
        uses: typst-community/setup-typst@v4

      - name: Install GnuPlot
        run: |
          sudo apt-get install gnuplot

      - name: Install TexLive-Full
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: scheme-full

      - name: Install Tectonic
        uses: wtfjoke/setup-tectonic@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Neovim
        run: |
          sudo add-apt-repository ppa:neovim-ppa/unstable -y
          sudo apt-get update
          sudo apt-get install -y neovim

      - name: Setup Neovim config
        run: |
          mkdir -p ~/.config/nvim
          cp -r . ~/.config/nvim  # Copy repo files to ~/.config/nvim

      - name: Install plugins with Lazy.nvim
        run: |
          nvim --headless "+Lazy! sync" +qall

      - name: Install Mason dependencies
        run: |
          nvim --headless -c "MasonInstall delve" -c "MasonUpdate" -c "q"

      - name: Wait for Mason to finish installing
        run: |
          while nvim --headless -c "lua print(require('mason-core.installer').is_running() and 'installing' or 'done')" -c "q" | grep -q 'installing'; do
            echo "Waiting for Mason to finish..."
            sleep 2
          done
          echo "Mason finished installing."

      - name: Install Treesitter parsers
        run: |
          nvim --headless -c "TSUpdateSync" -c "q"

      - name: Run :checkhealth and save output
        run: |
          nvim --headless -c "redir! > checkhealth.log" -c "silent checkhealth" -c "redir END" -c "q"

      - name: Upload checkhealth.log
        uses: actions/upload-artifact@v4
        with:
          name: checkhealth-log
          path: checkhealth.log
